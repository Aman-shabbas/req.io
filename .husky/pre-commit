#!/bin/bash
# .husky/pre-commit

echo "--------------------------------"
echo "Running pre-commit checks"
echo "--------------------------------"

any_failed=0

run_check() {
  local name="$1"
  shift
  local cmd=("$@")

  echo "▶️ Running: $name"
  echo "--------------------------------"

  # Run the command live and capture all output
  "${cmd[@]}" 2>&1 | tee /tmp/husky_output.log
  exit_code=${PIPESTATUS[0]}  # actual exit code

  # Filter real '[warn] <file>' warnings (exclude everything else)
  warnings=$(grep -E "^\[warn\] .*" /tmp/husky_output.log || true)

  # Determine status
  if [ $exit_code -ne 0 ] || [ -n "$warnings" ]; then
    status="❌"
    any_failed=1
    if [ -n "$warnings" ]; then
      echo "⚠️  Code warnings detected:"
      echo "$warnings"
      echo "--------------------------------"
    fi
  else
    status="✅"
  fi

  printf "%-25s %s\n" "$name" "$status"
  echo "--------------------------------"
}

# Run all checks
run_check "yarn run lint" yarn run lint
run_check "yarn run typecheck" yarn run typecheck
run_check "yarn run format:check" yarn run format:check
run_check "yarn run test:coverage" yarn run test:coverage

# Final result
if [ $any_failed -eq 0 ]; then
  echo "✅ All pre-commit checks passed successfully!"
  exit 0
else
  echo "❌ Some pre-commit checks failed. Fix them before committing."
  exit 1
fi
